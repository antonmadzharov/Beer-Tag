{"ast":null,"code":"import _toConsumableArray from \"/Users/antonmadzharov/Downloads/catalog-master/frontEnd/ReactCatalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/antonmadzharov/Downloads/catalog-master/frontEnd/ReactCatalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"/Users/antonmadzharov/Downloads/catalog-master/frontEnd/ReactCatalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/antonmadzharov/Downloads/catalog-master/frontEnd/ReactCatalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/antonmadzharov/Downloads/catalog-master/frontEnd/ReactCatalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/antonmadzharov/Downloads/catalog-master/frontEnd/ReactCatalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/antonmadzharov/Downloads/catalog-master/frontEnd/ReactCatalog/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/antonmadzharov/Downloads/catalog-master/frontEnd/ReactCatalog/src/components/users/Users.js\";\nimport React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { SERVER_URL } from \"../../constants.js\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport { MDBBtn, MDBIcon } from \"mdbreact\";\n\nvar Users =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Users, _Component);\n\n  function Users(props) {\n    var _this;\n\n    _classCallCheck(this, Users);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Users).call(this, props));\n\n    _this.fetchLists = function () {\n      var token = sessionStorage.getItem(\"jwt\");\n      fetch(SERVER_URL + \"api/users\", {\n        headers: {\n          Authorization: token\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (responseData) {\n        _this.setState({\n          users: responseData._embedded.users\n        });\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    };\n\n    _this.customFilter = function (filter, row) {\n      var id = filter.pivotId || filter.id;\n\n      if (row[id] !== null && typeof row[id] === \"string\") {\n        return row[id] !== undefined ? String(row[id].toLowerCase()).includes(filter.value.toLowerCase()) : true;\n      }\n    };\n\n    _this.confirmDelete = function (link) {\n      confirmAlert({\n        message: \"Are you sure to delete?\",\n        buttons: [{\n          label: \"Yes\",\n          onClick: function onClick() {\n            return _this.onDelClick(link);\n          }\n        }, {\n          label: \"No\"\n        }]\n      });\n    };\n\n    _this.onDelClick = function (link) {\n      var token = sessionStorage.getItem(\"jwt\");\n      fetch(link, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: token\n        }\n      }).then(function (res) {\n        _this.setState({\n          open: true,\n          message: \"Deleted\"\n        });\n\n        _this.fetchLists();\n      }).catch(function (err) {\n        _this.setState({\n          open: true,\n          message: \"Error when deleting\"\n        });\n\n        console.error(err);\n      });\n    };\n\n    _this.handleCheck = function (event) {\n      _this.setState(_defineProperty({}, event.target.name, event.target.checked));\n    };\n\n    _this.renderEditable = function (cellInfo) {\n      return React.createElement(\"div\", {\n        style: {\n          backgroundColor: \"#fafafa\"\n        },\n        contentEditable: true,\n        suppressContentEditableWarning: true,\n        onBlur: function onBlur(e) {\n          var data = _toConsumableArray(_this.state.users);\n\n          data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\n\n          _this.setState({\n            users: data\n          });\n        },\n        dangerouslySetInnerHTML: {\n          __html: _this.state.users[cellInfo.index][cellInfo.column.id]\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116\n        },\n        __self: this\n      });\n    };\n\n    _this.handleClose = function (event, reason) {\n      _this.setState({\n        open: false\n      });\n    };\n\n    _this.state = {\n      users: [],\n      open: false,\n      message: \"\"\n    };\n    return _this;\n  }\n\n  _createClass(Users, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.fetchLists();\n    } // Fetch all users\n\n  }, {\n    key: \"addPlaylist\",\n    // Add new user\n    value: function addPlaylist(playlist) {\n      var _this2 = this;\n\n      var token = sessionStorage.getItem(\"jwt\");\n      fetch(SERVER_URL + \"api/users\", {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        },\n        body: JSON.stringify(playlist)\n      }).then(function (res) {\n        return _this2.fetchLists();\n      }).catch(function (err) {\n        return console.error(err);\n      });\n    }\n  }, {\n    key: \"updatePlaylist\",\n    // Update user\n    value: function updatePlaylist(user, link) {\n      var _this3 = this;\n\n      var token = sessionStorage.getItem(\"jwt\");\n      fetch(link, {\n        method: \"PATCH\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: token\n        },\n        body: JSON.stringify(user)\n      }).then(function (res) {\n        return _this3.setState({\n          open: true,\n          message: \"Changes saved\"\n        });\n      }).catch(function (err) {\n        return _this3.setState({\n          open: true,\n          message: \"Error when saving\"\n        });\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this4 = this;\n\n      var columns = [{\n        Header: \"Username\",\n        accessor: \"username\"\n      }, {\n        Header: \"Role\",\n        accessor: \"role\",\n        filterable: false,\n        width: 100,\n        Cell: this.renderEditable\n      }, {\n        Header: \"Save\",\n        id: \"savebutton\",\n        sortable: false,\n        filterable: false,\n        width: 80,\n        accessor: \"_links.self.href\",\n        Cell: function Cell(_ref) {\n          var value = _ref.value,\n              row = _ref.row;\n          return React.createElement(MDBBtn, {\n            color: \"primary\",\n            size: \"sm\",\n            onClick: function onClick() {\n              _this4.updatePlaylist(row, value);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }, React.createElement(MDBIcon, {\n            icon: \"marker\",\n            size: \"2x\",\n            className: \"white-text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 165\n            },\n            __self: this\n          }));\n        }\n      }, {\n        Header: \"Delete\",\n        id: \"delbutton\",\n        sortable: false,\n        filterable: false,\n        width: 100,\n        accessor: \"_links.self.href\",\n        Cell: function Cell(_ref2) {\n          var value = _ref2.value;\n          return React.createElement(MDBBtn, {\n            color: \"danger\",\n            size: \"sm\",\n            onClick: function onClick() {\n              _this4.confirmDelete(value);\n            },\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 177\n            },\n            __self: this\n          }, React.createElement(MDBIcon, {\n            icon: \"trash\",\n            size: \"2x\",\n            className: \"white-text\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 184\n            },\n            __self: this\n          }));\n        }\n      }];\n      return React.createElement(\"div\", {\n        className: \"App\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        container: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, React.createElement(Grid, {\n        item: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 193\n        },\n        __self: this\n      }), React.createElement(Grid, {\n        item: true,\n        style: {\n          padding: 20\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 194\n        },\n        __self: this\n      })), React.createElement(ReactTable, {\n        data: this.state.users,\n        columns: columns,\n        filterable: true,\n        defaultFilterMethod: this.customFilter,\n        pageSize: 5,\n        showPaginationBottom: true,\n        noDataText: React.createElement(\"div\", {\n          class: \"spinner-border fast text-info\",\n          role: \"status\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, React.createElement(\"span\", {\n          class: \"sr-only\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, \"Loading...\")),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 197\n        },\n        __self: this\n      }), React.createElement(Snackbar, {\n        open: this.state.open,\n        onClose: this.handleClose,\n        autoHideDuration: 1500,\n        message: this.state.message,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 210\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Users;\n}(Component);\n\nexport default Users;","map":{"version":3,"sources":["/Users/antonmadzharov/Downloads/catalog-master/frontEnd/ReactCatalog/src/components/users/Users.js"],"names":["React","Component","ReactTable","SERVER_URL","confirmAlert","Grid","Snackbar","MDBBtn","MDBIcon","Users","props","fetchLists","token","sessionStorage","getItem","fetch","headers","Authorization","then","response","json","responseData","setState","users","_embedded","catch","err","console","error","customFilter","filter","row","id","pivotId","undefined","String","toLowerCase","includes","value","confirmDelete","link","message","buttons","label","onClick","onDelClick","method","res","open","handleCheck","event","target","name","checked","renderEditable","cellInfo","backgroundColor","e","data","state","index","column","innerHTML","__html","handleClose","reason","playlist","body","JSON","stringify","user","columns","Header","accessor","filterable","width","Cell","sortable","updatePlaylist","padding"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport ReactTable from \"react-table\";\nimport \"react-table/react-table.css\";\nimport { SERVER_URL } from \"../../constants.js\";\nimport { confirmAlert } from \"react-confirm-alert\";\nimport \"react-confirm-alert/src/react-confirm-alert.css\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Snackbar from \"@material-ui/core/Snackbar\";\n\nimport { MDBBtn, MDBIcon } from \"mdbreact\";\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { users: [], open: false, message: \"\" };\n  }\n\n  componentDidMount() {\n    this.fetchLists();\n  }\n\n  // Fetch all users\n  fetchLists = () => {\n    const token = sessionStorage.getItem(\"jwt\");\n    fetch(SERVER_URL + \"api/users\", {\n      headers: { Authorization: token }\n    })\n      .then(response => response.json())\n      .then(responseData => {\n        this.setState({\n          users: responseData._embedded.users\n        });\n      })\n      .catch(err => console.error(err));\n  };\n\n  customFilter = (filter, row) => {\n    const id = filter.pivotId || filter.id;\n    if (row[id] !== null && typeof row[id] === \"string\") {\n      return row[id] !== undefined\n        ? String(row[id].toLowerCase()).includes(filter.value.toLowerCase())\n        : true;\n    }\n  };\n\n  confirmDelete = link => {\n    confirmAlert({\n      message: \"Are you sure to delete?\",\n      buttons: [\n        {\n          label: \"Yes\",\n          onClick: () => this.onDelClick(link)\n        },\n        {\n          label: \"No\"\n        }\n      ]\n    });\n  };\n\n  // Delete user\n  onDelClick = link => {\n    const token = sessionStorage.getItem(\"jwt\");\n    fetch(link, {\n      method: \"DELETE\",\n      headers: { Authorization: token }\n    })\n      .then(res => {\n        this.setState({ open: true, message: \"Deleted\" });\n        this.fetchLists();\n      })\n      .catch(err => {\n        this.setState({ open: true, message: \"Error when deleting\" });\n        console.error(err);\n      });\n  };\n\n  // Add new user\n  addPlaylist(playlist) {\n    const token = sessionStorage.getItem(\"jwt\");\n    fetch(SERVER_URL + \"api/users\", {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token\n      },\n      body: JSON.stringify(playlist)\n    })\n      .then(res => this.fetchLists())\n      .catch(err => console.error(err));\n  }\n\n  handleCheck = event => {\n    this.setState({ [event.target.name]: event.target.checked });\n  };\n\n  // Update user\n  updatePlaylist(user, link) {\n    const token = sessionStorage.getItem(\"jwt\");\n    fetch(link, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: token\n      },\n      body: JSON.stringify(user)\n    })\n      .then(res => this.setState({ open: true, message: \"Changes saved\" }))\n      .catch(err =>\n        this.setState({ open: true, message: \"Error when saving\" })\n      );\n  }\n\n  renderEditable = cellInfo => {\n    return (\n      <div\n        style={{ backgroundColor: \"#fafafa\" }}\n        contentEditable\n        suppressContentEditableWarning\n        onBlur={e => {\n          const data = [...this.state.users];\n          data[cellInfo.index][cellInfo.column.id] = e.target.innerHTML;\n          this.setState({ users: data });\n        }}\n        dangerouslySetInnerHTML={{\n          __html: this.state.users[cellInfo.index][cellInfo.column.id]\n        }}\n      />\n    );\n  };\n\n  handleClose = (event, reason) => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const columns = [\n      {\n        Header: \"Username\",\n        accessor: \"username\"\n      },\n\n      {\n        Header: \"Role\",\n        accessor: \"role\",\n        filterable: false,\n        width: 100,\n        Cell: this.renderEditable\n      },\n      {\n        Header: \"Save\",\n        id: \"savebutton\",\n        sortable: false,\n        filterable: false,\n        width: 80,\n        accessor: \"_links.self.href\",\n        Cell: ({ value, row }) => (\n          <MDBBtn\n            color=\"primary\"\n            size=\"sm\"\n            onClick={() => {\n              this.updatePlaylist(row, value);\n            }}\n          >\n            <MDBIcon icon=\"marker\" size=\"2x\" className=\"white-text\" />\n          </MDBBtn>\n        )\n      },\n      {\n        Header: \"Delete\",\n        id: \"delbutton\",\n        sortable: false,\n        filterable: false,\n        width: 100,\n        accessor: \"_links.self.href\",\n        Cell: ({ value }) => (\n          <MDBBtn\n            color=\"danger\"\n            size=\"sm\"\n            onClick={() => {\n              this.confirmDelete(value);\n            }}\n          >\n            <MDBIcon icon=\"trash\" size=\"2x\" className=\"white-text\" />\n          </MDBBtn>\n        )\n      }\n    ];\n\n    return (\n      <div className=\"App\">\n        <Grid container>\n          <Grid item />\n          <Grid item style={{ padding: 20 }} />\n        </Grid>\n\n        <ReactTable\n          data={this.state.users}\n          columns={columns}\n          filterable={true}\n          defaultFilterMethod={this.customFilter}\n          pageSize={5}\n          showPaginationBottom\n          noDataText={\n            <div class=\"spinner-border fast text-info\" role=\"status\">\n              <span class=\"sr-only\">Loading...</span>\n            </div>\n          }\n        />\n        <Snackbar\n          open={this.state.open}\n          onClose={this.handleClose}\n          autoHideDuration={1500}\n          message={this.state.message}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Users;\n"]},"metadata":{},"sourceType":"module"}